plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'com.google.cloud.tools.jib' version '3.2.1'
}

group = 'kr.co.e8ight.ndxpro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	maven {
		url 'http://172.16.28.217:9081/repository/maven-releases/'
		allowInsecureProtocol = true
		credentials {
			username = "admin"
			password = "ndxpro123!"
		}
	}
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.1.4'
	implementation 'com.h2database:h2:2.1.214'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.projectlombok:lombok'
	implementation 'org.apache.commons:commons-lang3'
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.13'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//logstash encoder
	implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.0.1'

	//sleuth & zipkin
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.1'
	implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin:3.1.1'

	implementation 'kr.co.e8ight.ndxpro:ndxpro_common:0.0.4'
}

tasks.named('test') {
	useJUnitPlatform()
}

jib {
	from{
		image = "openjdk:11"
//		platforms {
//			platform {
//				architecture = 'arm64'
//				os = 'linux'
//			}
//		}
	}
	to {
		image = "172.16.28.217:12000/ndxpro-ngsi-translator"
		tags = ["v1.1"]
		auth {
			username = "admin"
			password = "ndxpro123!"
		}
		container {
			mainClass ="kr.co.e8ight.ndxpro.translatorManager.ManagerApplication"
			ports = ["9900"]
			environment = ["TZ" : "Asia/Seoul"]
		}
	}
	setAllowInsecureRegistries(true)
}