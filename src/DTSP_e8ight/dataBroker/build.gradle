plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'com.google.cloud.tools.jib' version '3.2.1'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'java'
    id 'jacoco'
}

group = 'kr.co.e8ight.ndxpro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.13.1'
    implementation 'org.projectlombok:lombok:1.18.22'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // ndxpro common
    implementation 'kr.co.e8ight.ndxpro:ndxpro_common:0.0.7'

    // mongo db
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // jpa annotation
    implementation 'javax.persistence:javax.persistence-api:2.2'

    // guava
    implementation 'com.google.guava:guava:11.0.2'

    // kafka
    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test:2.9.3'
    testImplementation 'org.testcontainers:kafka:1.17.6'

    // validation
    implementation 'javax.validation:validation-api'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

    // mongodb querydsl
    implementation ('com.querydsl:querydsl-mongodb') {
        exclude group:'org.mongodb', module: 'mongo-java-driver'
    }
    implementation 'com.querydsl:querydsl-apt'
    annotationProcessor 'com.querydsl:querydsl-apt'

    // eureka
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.1.4'

    // embed mongo
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.batch:spring-batch-test'

    // sleuth, zipkin
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.1'
    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin:3.1.1'

    // logstash
    implementation 'net.logstash.logback:logstash-logback-encoder:7.0.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

repositories {
    maven {
        url 'http://172.16.28.217:9081/repository/maven-releases/'
        allowInsecureProtocol = true
        credentials {
            username = "admin"
            password = "ndxpro123!"
        }
    }
}

jib {
    from {
        image = "openjdk:11.0.14-jre-slim"
    }
    to {
        image = "172.16.28.217:12000/ndxpro-core-databroker"
        tags = ["v1.1.2"]
        auth {
            username = "admin"
            password = "ndxpro123!"
        }
    }
    setAllowInsecureRegistries(true)
}

// querydsl
def querydslGeneratedDir = "$buildDir/generated/querydsl" as Object

querydsl {
    library = "com.querydsl:querydsl-apt"
    springDataMongo = true
    querydslSourcesDir = querydslGeneratedDir
}

sourceSets {
    main.java.srcDir querydslGeneratedDir
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}