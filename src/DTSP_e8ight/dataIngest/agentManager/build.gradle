buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.google.cloud.tools.jib' version '3.2.1'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'kr.co.e8ight.ndxpro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    maven {
        url 'http://172.16.28.217:9081/repository/maven-releases/'
        allowInsecureProtocol = true
        credentials {
            username = "admin"
            password = "ndxpro123!"
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.1.4'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.codehaus.janino:janino'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.13'
    implementation 'com.vladmihalcea:hibernate-types-52:2.16.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-apt:5.0.0'

    //logstash encoder
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.0.1'

    //sleuth & zipkin
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.1'
    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin:3.1.1'

    //ndxpro common
    implementation 'kr.co.e8ight.ndxpro:ndxpro_common:0.1.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

jib {
    from{
        image = "172.16.28.217:12000/ndxpro-dataadapter:v1.1"
        auth {
            username = "admin"
            password = "ndxpro123!"
        }
    }
    to {
        image = "172.16.28.217:12000/ndxpro-dataingest"
        tags = ["v1.1"]
        auth {
            username = "admin"
            password = "ndxpro123!"
        }
    }

    allowInsecureRegistries = true
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDirs querydslDir
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    dependsOn(clean)
    options.annotationProcessorPath = configurations.querydsl
}