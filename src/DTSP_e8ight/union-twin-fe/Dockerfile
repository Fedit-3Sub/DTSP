# Stage 1: Build the React application
FROM node:16 as builder
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .

ENV REACT_APP_DIGITAL_TWIN_SEARCH_URL=NDXPRO_ENV_DIGITAL_TWIN_SEARCH_URL
ENV REACT_APP_TOKEN=NDXPRO_ENV_TOKEN
ENV REACT_APP_API_URL=NDXPRO_ENV_API_URL
ENV REACT_APP_API_OUTSIDE_URL=NDXPRO_ENV_API_OUTSIDE_URL
ENV REACT_APP_VIEWER_URL=NDXPRO_ENV_VIEWER_URL
ENV REACT_APP_PREDICTOR_TOOL_URL=NDXPRO_ENV_PREDICTOR_TOOL_URL
ENV REACT_APP_DISCRETE_SIMULATOR_URL=NDXPRO_ENV_DISCRETE_SIMULATOR_URL
ENV REACT_APP_SERVICE_LOGIC_TOOL_URL=NDXPRO_ENV_SERVICE_LOGIC_TOOL_URL
ENV REACT_APP_DIGITAL_TWIN_METADATA_REGISTRATION=NDXPRO_ENV_DIGITAL_TWIN_METADATA_REGISTRATION
ENV REACT_APP_METADATA_VISUALIZATION_GRAPH=NDXPRO_ENV_METADATA_VISUALIZATION_GRAPH
ENV REACT_APP_UNION_OBJECT_SYNC_ENGINE_MANAGEMENT=NDXPRO_ENV_UNION_OBJECT_SYNC_ENGINE_MANAGEMENT
ENV REACT_APP_VERIFICATION_DATA_ADDITION_MANAGEMENT=NDXPRO_ENV_VERIFICATION_DATA_ADDITION_MANAGEMENT

RUN npm run build

# Stage 2: Serve the React application from Nginx
FROM nginx:alpine
COPY --from=builder /app/build /usr/share/nginx/html
# COPY ./build /usr/share/nginx/html
COPY ./default.conf /etc/nginx/conf.d
EXPOSE 80

COPY ./env.sh /docker-entrypoint.d/env.sh

RUN chmod +x /docker-entrypoint.d/env.sh